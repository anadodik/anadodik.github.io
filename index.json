[{"authors":["admin"],"categories":null,"content":"I am a computer vision engineer at Facebook Reality Labs specialized in computer graphics, machine learning, and computer vision.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1623431569,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://anadodik.com/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"I am a computer vision engineer at Facebook Reality Labs specialized in computer graphics, machine learning, and computer vision.","tags":null,"title":"Ana Dodik","type":"authors"},{"authors":["Ana Dodik"],"categories":null,"content":"","date":1587340800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1623431569,"objectID":"45453e1ec385cc80d5599592c1c60ea1","permalink":"https://anadodik.com/publication/sdmm-thesis/","publishdate":"2020-04-20T00:00:00Z","relpermalink":"/publication/sdmm-thesis/","section":"publication","summary":"In this thesis, we develop a path-guiding method based on a probability distribution which we name the spatio-directional mixture model (SDMM). Our algorithm fits SDMMs to the 5- dimensional radiance distribution in an online manner and is capable of representing it as one continuous function. Our method does not require us to explicitly discretize the scene, princi- pally deals with outlier samples and allows us to sample the product of the radiance distribution and the material model. Furthermore, we present a new geometry-aware initialization scheme, as well as a way of accelerating the training speed. We analyze the impact of the different components of our algorithm, and demonstrate its effectiveness by comparing it to Practical Path Guiding (PPG) [MGN17]. Indeed, we show that our algorithm outperforms PPG on equal- sample comparisons.","tags":null,"title":"Path Guiding using a Spatio-Directional Mixture Model","type":"publication"},{"authors":null,"categories":null,"content":"In May 2016, I decided to take the Microcontroller class at the TU Wien. We were supposed to implement a pretty simple labyrinth game, controlled using a Wiimote, for our first project. I sort of got carried away and made a Pac-Man clone. It also plays Lady Gaga.\nIt’s controlled by kipping the Wiimote and the mazes are randomly generated (using the modified Prim’s algorithm as found on Wikipedia).\nOther things I implemented include:\n the GLCD driver, the hardware abstraction layer for the Wiimote Bluetooth, a random number generator which is fed using the ADC in differential mode to measure two High-Z pins, sending data from the SD-card to the MP3 module, more minor things (such as certain communication protocols).  Here is the code for all of those who are interested. It was one of the more fun ways of being sleep deprived for almost a week.\n  ","date":1462752000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562747234,"objectID":"fc33444a3cfcd0bbe60e20128aa47f61","permalink":"https://anadodik.com/project/haunted-maze/","publishdate":"2016-05-09T00:00:00Z","relpermalink":"/project/haunted-maze/","section":"project","summary":"A WiiMote controlled Pac-Man clone on the Atmega1280 microcontroller.","tags":["microcontroller","engineering"],"title":"Haunted Maze","type":"project"},{"authors":null,"categories":null,"content":"A couple of semesters ago I decided to somewhat challenge myself. I took a class from the graduate program of Visual Computing at my university and decided to do it as a sort of a hobby project. This course has the students make a graphics demo, such as you would see in demoscene.\nMy idea was to make a magical forest with as many point lights flying around as possible. In the end I implemented the following effects:\n Deferred Shading [1] in order to handle a lot of lights. I actually ended up using a hybrid approach, where I would use the spheres near the camera as stencils, and instanced rendering for everything else. This should theoretically minimize the amount of overdraw happening. Two automatic Level of Detail techniques to reduce the amount of polygons. An edge collapse [2] algorithm would run on startup to decimate the objects and create varying levels of detail for an object. Obviously this isn’t something you would want to do in a game where all of the assets need to be loaded dynamically during gameplay, but since everything in my demo fits in a small amount of memory due to heavy instancing, it was no problem to load everything and wait for a little bit at startup. Geometry shader billboarding [3] as the lowest resolution level of detail. A few post processing effects were also implemented: Bloom [4] HDR [5] for the fairies flying in the atmosphere. Depth of Field [6] to focus mostly on the creatures in front of the camera.  Feel free to skip around through the video, it’s somewhat slow at the beginning.\n  Definitely the most dificult part of the project was the sheer amount of work I had to do. These projects are usually done in pairs, but I had to do it myself since my partner decided to drop the course. I was, however, very excited about the project, and I can’t wait until I get to do something like this again.\nSources\n[1] Deferred Shading\n[2] Edge Collapse\n[3] Geometry Shader Billboarding\n[4] Basic Bloom Effect, Extension\n[5] HDR\n[6] Depth of Field\nThis was done for the Real Time Rendering course at the TU Wien.\n","date":1453503600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562747234,"objectID":"e7b924cc85fd50ec3be6f92a891693b4","permalink":"https://anadodik.com/project/fairy-forest/","publishdate":"2016-01-23T00:00:00+01:00","relpermalink":"/project/fairy-forest/","section":"project","summary":"A Real-Time 3D Graphics Demo","tags":["OpenGL","demo","game","engineering"],"title":"Fairy Forest","type":"project"}]